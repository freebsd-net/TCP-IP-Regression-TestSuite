#!/bin/sh

##################################################
# Automation script for running tests            #
# A default tolerance value of 1 second is used. #
##################################################

if [ `uname` = FreeBSD ]; then
  packetdrill=/usr/local/bin/packetdrill
else
  packetdrill=/usr/bin/packetdrill
fi

directory="$1"
extension=".pkt"
TOLERANCE_USECS=1000000

trap clean_up HUP INT TERM

clean_up() {
  echo "Cleaning up"
  rm -f temp_list temp.log
  exit 1
}

file=tests_list   # contains the list of ".pkt" files in case the argument is empty or a directory
pkt_file_flag=0   # tracks whether the argument is a ".pkt" file

# Check if path to packetdrill binary is set
if [ -z $packetdrill ]; then
  printf "Please set the value of \$packetdrill variable to the path of packetdrill binary on your machine.\n"
  exit 1
fi

# Handle invalid argument
if [ ! -z "$directory" ] && [ ! -e "$directory" ]; then
  echo "File not found!"
  exit 1
fi

# Check if the argument is a ".pkt" file
if test "${directory#*$extension}" != "$directory"; then
  pkt_file_flag=1
fi

# Check if the argument is a directory
if [ ! -z "$directory" ] && [ $pkt_file_flag = 0 ]; then
  sh update-test-list temp_list "$directory"
  file=temp_list
else
  sh update-test-list tests_list
fi

delay=0.2
run=0
skipped=0
passed=0
failed=0

# Modify values depending on return status
check_status() {
  run=$((run + 1))
  if [ "$result" = 1 ]; then
    {
      printf "Test Name: %s\.pkt\n" "${test}"
      printf "\---------------------------------------------------------\n"
      cat temp.log
      printf "\n"
    } >> error.log
    echo -e "\e[0;31mFAILED\e[0m"
    printf "\---------------------------------------------------------------\n"
    failed=$((failed + 1))
  else
    echo -e "\e[1;32mPASSED\e[0m"
    printf "\---------------------------------------------------------------\n"
    passed=$((passed + 1))
  fi
}

rm -f error.log
{
  printf "Error log of tests run at `date`\n"
  printf "===============================================================\n"
} > error.log
printf "\nScript Name                                             Result\n"
printf "===============================================================\n"

# Check if a single test script or a directory is given as argument
if [ $pkt_file_flag = 1 ]; then
  printf "%-55.55s " "$directory"
  if [ -e "$directory" ]; then
    rm -f temp.log
    $packetdrill -v --tolerance_usecs=$TOLERANCE_USECS "$directory" >> temp.log 2>&1
    result="`echo $?`"
    check_status
  else
    echo -e "\e[1;33mSKIPPED\e[0m"
    skipped=$((skipped + 1))
  fi

else
  while IFS= read -r test
  do
    printf "%-55.55s " "$test"
    sleep $delay
    if [ -e "${test}".pkt ]; then
      rm -f temp.log
      $packetdrill -v --tolerance_usecs=$TOLERANCE_USECS "${test}".pkt >> temp.log 2>&1
      result="`echo $?`"
      check_status
    else
      echo -e "\e[1;33mSKIPPED\e[0m"
      skipped=$((skipped + 1))
    fi
  done< $file
  rm -f temp.log temp_list
fi

if [ $run = 0 ]; then
  echo -e "\e[0;31mMake sure that you have specified the correct .pkt file\e[0m\n"
  exit 1
fi

printf "\nSummary\n"
printf "===========================\n"

printf "Number of tests run: %6d\n" $run
printf "Number of tests passed: %3d\n" $passed
printf "Number of tests failed: %3d\n" $failed
printf "Number of tests skipped: %2d\n\n" $skipped

if [ $failed -ne 0 ]; then
  printf "\nView the log file (error.log) for details\n"
fi
